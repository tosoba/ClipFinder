/**
 * Spotify Web API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.clipfinder.spotify.api.models

import com.squareup.moshi.Json

/**
 *
 * @param bars The time intervals of the bars throughout the track. A bar (or measure) is a segment of time defined as a given number of beats. Bar offsets also indicate downbeats, the first beat of the measure.
 * @param beats The time intervals of beats throughout the track. A beat is the basic time unit of a piece of music; for example, each tick of a metronome. Beats are typically multiples of tatums.
 * @param sections Sections are defined by large variations in rhythm or timbre, e.g. chorus, verse, bridge, guitar solo, etc. Each section contains its own descriptions of tempo, key, mode, time_signature, and loudness.
 * @param segments Audio segments attempts to subdivide a song into many segments, with each segment containing a roughly consistent sound throughout its duration.
 * @param tatums A tatum represents the lowest regular pulse train that a listener intuitively infers from the timing of perceived musical events (segments).
 */

data class AudioAnalysisObject(
    /* The time intervals of the bars throughout the track. A bar (or measure) is a segment of time defined as a given number of beats. Bar offsets also indicate downbeats, the first beat of the measure. */
    @Json(name = "bars")
    val bars: List<TimeIntervalObject>? = null,
    /* The time intervals of beats throughout the track. A beat is the basic time unit of a piece of music; for example, each tick of a metronome. Beats are typically multiples of tatums. */
    @Json(name = "beats")
    val beats: List<TimeIntervalObject>? = null,
    /* Sections are defined by large variations in rhythm or timbre, e.g. chorus, verse, bridge, guitar solo, etc. Each section contains its own descriptions of tempo, key, mode, time_signature, and loudness. */
    @Json(name = "sections")
    val sections: List<SectionObject>? = null,
    /* Audio segments attempts to subdivide a song into many segments, with each segment containing a roughly consistent sound throughout its duration. */
    @Json(name = "segments")
    val segments: List<SegmentObject>? = null,
    /* A tatum represents the lowest regular pulse train that a listener intuitively infers from the timing of perceived musical events (segments). */
    @Json(name = "tatums")
    val tatums: List<TimeIntervalObject>? = null
)

