/**
 * Spotify Web API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.clipfinder.spotify.api.model

import com.squareup.moshi.Json

/**
 *
 * @param externalUrls
 * @param followers
 * @param genres A list of the genres the artist is associated with. For example: \"Prog Rock\" , \"Post-Grunge\". (If not yet classified, the array is empty.)
 * @param href A link to the Web API endpoint providing full details of the artist.
 * @param id The Spotify ID for the artist.
 * @param images Images of the artist in various sizes, widest first.
 * @param name The name of the artist.
 * @param popularity The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist’s popularity is calculated from the popularity of all the artist’s tracks.
 * @param type The object type: \"artist\"
 * @param uri The Spotify URI for the artist.
 */

data class ArtistObject(
    @Json(name = "external_urls")
    val externalUrls: Any? = null,
    @Json(name = "followers")
    val followers: FollowersObject? = null,
    /* A list of the genres the artist is associated with. For example: \"Prog Rock\" , \"Post-Grunge\". (If not yet classified, the array is empty.) */
    @Json(name = "genres")
    val genres: List<String>? = null,
    /* A link to the Web API endpoint providing full details of the artist. */
    @Json(name = "href")
    val href: String? = null,
    /* The Spotify ID for the artist. */
    @Json(name = "id")
    val id: String? = null,
    /* Images of the artist in various sizes, widest first. */
    @Json(name = "images")
    val images: List<ImageObject>? = null,
    /* The name of the artist. */
    @Json(name = "name")
    val name: String? = null,
    /* The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist’s popularity is calculated from the popularity of all the artist’s tracks. */
    @Json(name = "popularity")
    val popularity: Int? = null,
    /* The object type: \"artist\" */
    @Json(name = "type")
    val type: String? = null,
    /* The Spotify URI for the artist. */
    @Json(name = "uri")
    val uri: String? = null
)

