/**
 * Spotify Web API No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.clipfinder.spotify.api.model

import com.clipfinder.core.spotify.model.ISpotifySimplifiedAlbum
import com.squareup.moshi.Json

/**
 *
 * @param albumGroup The field is present when getting an artist’s albums. Possible values are
 * “album”, “single”, “compilation”, “appears_on”. Compare to album_type this field represents
 * relationship between the artist and the album.
 * @param albumType The type of the album: one of “album”, “single”, or “compilation”.
 * @param artists The artists of the album. Each artist object includes a link in href to more
 * detailed information about the artist.
 * @param availableMarkets The markets in which the album is available: ISO 3166-1 alpha-2 country
 * codes. Note that an album is considered available in a market when at least 1 of its tracks is
 * available in that market.
 * @param externalUrls
 * @param href A link to the Web API endpoint providing full details of the album.
 * @param id The Spotify ID for the album.
 * @param images The cover art for the album in various sizes, widest first.
 * @param name The name of the album. In case of an album takedown, the value may be an empty
 * string.
 * @param type The object type: “album”
 * @param uri The Spotify URI for the album.
 */
data class SimplifiedAlbumObject(
    /* The field is present when getting an artist’s albums. Possible values are “album”, “single”, “compilation”, “appears_on”. Compare to album_type this field represents relationship between the artist and the album. */
    @Json(name = "album_group") val albumGroup: String? = null,
    /* The type of the album: one of “album”, “single”, or “compilation”. */
    @Json(name = "album_type") override val albumType: String,
    /* The artists of the album. Each artist object includes a link in href to more detailed information about the artist. */
    @Json(name = "artists") override val artists: List<SimplifiedArtistObject>,
    /* The markets in which the album is available: ISO 3166-1 alpha-2 country codes. Note that an album is considered available in a market when at least 1 of its tracks is available in that market. */
    @Json(name = "available_markets") val availableMarkets: List<String>? = null,
    @Json(name = "external_urls") val externalUrls: Any,
    /* A link to the Web API endpoint providing full details of the album. */
    @Json(name = "href") override val href: String,
    /* The Spotify ID for the album. */
    @Json(name = "id") override val id: String,
    /* The cover art for the album in various sizes, widest first. */
    @Json(name = "images") override val images: List<ImageObject>,
    /* The name of the album. In case of an album takedown, the value may be an empty string. */
    @Json(name = "name") override val name: String,
    /* The object type: “album” */
    @Json(name = "type") val type: String,
    /* The Spotify URI for the album. */
    @Json(name = "uri") override val uri: String
) : ISpotifySimplifiedAlbum
